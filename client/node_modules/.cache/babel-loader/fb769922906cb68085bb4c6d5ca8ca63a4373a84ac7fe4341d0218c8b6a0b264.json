{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liamj\\\\Desktop\\\\AI\\\\LeadScraper\\\\client\\\\src\\\\components\\\\StatusIndicator.js\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { CheckCircle, AlertCircle, XCircle, Loader2, Wifi, WifiOff } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusIndicator = ({\n  status\n}) => {\n  const getStatusConfig = () => {\n    switch (status) {\n      case 'Connected':\n        return {\n          icon: CheckCircle,\n          color: 'text-success-600',\n          bgColor: 'bg-success-100',\n          label: 'Connected',\n          description: 'Real-time updates active'\n        };\n      case 'Connecting':\n        return {\n          icon: Loader2,\n          color: 'text-primary-600',\n          bgColor: 'bg-primary-100',\n          label: 'Connecting',\n          description: 'Establishing connection...',\n          animate: true\n        };\n      case 'Disconnected':\n        return {\n          icon: WifiOff,\n          color: 'text-warning-600',\n          bgColor: 'bg-warning-100',\n          label: 'Disconnected',\n          description: 'No real-time updates'\n        };\n      case 'Error':\n        return {\n          icon: XCircle,\n          color: 'text-danger-600',\n          bgColor: 'bg-danger-100',\n          label: 'Error',\n          description: 'Connection failed'\n        };\n      case 'Failed':\n        return {\n          icon: XCircle,\n          color: 'text-danger-600',\n          bgColor: 'bg-danger-100',\n          label: 'Failed',\n          description: 'Could not connect'\n        };\n      default:\n        if (status !== null && status !== void 0 && status.includes('Reconnecting')) {\n          return {\n            icon: Loader2,\n            color: 'text-warning-600',\n            bgColor: 'bg-warning-100',\n            label: 'Reconnecting',\n            description: status,\n            animate: true\n          };\n        }\n        return {\n          icon: AlertCircle,\n          color: 'text-gray-600',\n          bgColor: 'bg-gray-100',\n          label: 'Unknown',\n          description: 'Status unknown'\n        };\n    }\n  };\n  const config = getStatusConfig();\n  const Icon = config.icon;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: `p-2 rounded-full ${config.bgColor}`,\n      initial: {\n        scale: 0.8,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      transition: {\n        duration: 0.3\n      },\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        className: `h-4 w-4 ${config.color} ${config.animate ? 'animate-spin' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden sm:block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-sm font-medium ${config.color}`,\n        children: config.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500\",\n        children: config.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusIndicator;\nexport default StatusIndicator;\nvar _c;\n$RefreshReg$(_c, \"StatusIndicator\");","map":{"version":3,"names":["React","motion","CheckCircle","AlertCircle","XCircle","Loader2","Wifi","WifiOff","jsxDEV","_jsxDEV","StatusIndicator","status","getStatusConfig","icon","color","bgColor","label","description","animate","includes","config","Icon","className","children","div","initial","scale","opacity","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/liamj/Desktop/AI/LeadScraper/client/src/components/StatusIndicator.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  CheckCircle, \r\n  AlertCircle, \r\n  XCircle, \r\n  Loader2,\r\n  Wifi,\r\n  WifiOff\r\n} from 'lucide-react';\r\n\r\nconst StatusIndicator = ({ status }) => {\r\n  const getStatusConfig = () => {\r\n    switch (status) {\r\n      case 'Connected':\r\n        return {\r\n          icon: CheckCircle,\r\n          color: 'text-success-600',\r\n          bgColor: 'bg-success-100',\r\n          label: 'Connected',\r\n          description: 'Real-time updates active'\r\n        };\r\n      case 'Connecting':\r\n        return {\r\n          icon: Loader2,\r\n          color: 'text-primary-600',\r\n          bgColor: 'bg-primary-100',\r\n          label: 'Connecting',\r\n          description: 'Establishing connection...',\r\n          animate: true\r\n        };\r\n      case 'Disconnected':\r\n        return {\r\n          icon: WifiOff,\r\n          color: 'text-warning-600',\r\n          bgColor: 'bg-warning-100',\r\n          label: 'Disconnected',\r\n          description: 'No real-time updates'\r\n        };\r\n      case 'Error':\r\n        return {\r\n          icon: XCircle,\r\n          color: 'text-danger-600',\r\n          bgColor: 'bg-danger-100',\r\n          label: 'Error',\r\n          description: 'Connection failed'\r\n        };\r\n      case 'Failed':\r\n        return {\r\n          icon: XCircle,\r\n          color: 'text-danger-600',\r\n          bgColor: 'bg-danger-100',\r\n          label: 'Failed',\r\n          description: 'Could not connect'\r\n        };\r\n      default:\r\n        if (status?.includes('Reconnecting')) {\r\n          return {\r\n            icon: Loader2,\r\n            color: 'text-warning-600',\r\n            bgColor: 'bg-warning-100',\r\n            label: 'Reconnecting',\r\n            description: status,\r\n            animate: true\r\n          };\r\n        }\r\n        return {\r\n          icon: AlertCircle,\r\n          color: 'text-gray-600',\r\n          bgColor: 'bg-gray-100',\r\n          label: 'Unknown',\r\n          description: 'Status unknown'\r\n        };\r\n    }\r\n  };\r\n\r\n  const config = getStatusConfig();\r\n  const Icon = config.icon;\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <motion.div\r\n        className={`p-2 rounded-full ${config.bgColor}`}\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <Icon \r\n          className={`h-4 w-4 ${config.color} ${config.animate ? 'animate-spin' : ''}`}\r\n        />\r\n      </motion.div>\r\n      \r\n      <div className=\"hidden sm:block\">\r\n        <div className={`text-sm font-medium ${config.color}`}>\r\n          {config.label}\r\n        </div>\r\n        <div className=\"text-xs text-gray-500\">\r\n          {config.description}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusIndicator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}